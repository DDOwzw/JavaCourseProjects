/*******************************************************************************
File:             Questions.txt

Author:           <Zhongwei Wang; zhongwei>
                  <your partner's name and CS login, if pair programming>

Completion Date:  <4/17/2016>

Course:           CS 367, Spring 2016
*******************************************************************************/
Directions: answer the following six (6) questions. 

1) Before running your program, what is the worst complexity of building tree for 
ArrayList, Binary Search Tree, Binary Search Tree with a small positive
rebalance factor(e.g 2) and RBTree?

Answer: ArrayList: O(N);
Binary Search Tree: O(N^2);
With Factor: O(N^2);
RBTree: O(NlogN).

2) Before running your program, what is the worst complexity of contains search for 
ArrayList, Binary Search Tree, Binary Search Tree with a small positive
rebalance factor(e.g 2) and RBTree?

Answer:ArrayList: O(N);
Binary Search Tree: O(N);
With Factor: O(logN or N);it depends on the factor; in other words, the Height matters!-->O(H);
RBTree: O(logN).

3) Before running your program, what is the worst complexity of range search for 
ArrayList, Binary Search Tree, Binary Search Tree with a small positive
rebalance factor(e.g 2) and RBTree? Assume the range is small. Assume the result of
range search contains K elements.

Answer:ArrayList: O(N*K);
Binary Search Tree: O(K*N);
With Factor: O(K*logN)or O(K*N);Again the Height matters! Thus-->O(K*H)
RBTree: O(K*logN).


For questions 4 - 6, you should use the Evaluator program as written.

4) In this question you will run the program using the parameters 
indicated below:

random_1000.txt 10 2 3

a)For random data, what are the rankings (from fastest to slowest) for the four 
data structures based on the mean time of building a tree, contains search, and range
search? 
b)What about for the sorted data?

Answer:
a)The number stands for stars. In other words, 4 is the fastest,1 is the slowest!
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
ArrayListSet:		     3		      1		            1	
----------------------------------------------------------------------------
BSTreeSet:		     2		      2		            2	
----------------------------------------------------------------------------
BSTreeBSet:		     1		      2		            3	
----------------------------------------------------------------------------
RBTreeSet:		     2		      2		            2	
============================================================================

b)
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
ArrayListSet:		     2		      2		            1	
----------------------------------------------------------------------------
BSTreeSet:		     1		      1		            1	
----------------------------------------------------------------------------
BSTreeBSet:		     1		      3		            2	
----------------------------------------------------------------------------
RBTreeSet:		     2		      3		            2	
============================================================================


5) In this question you will run the program using the parameters 
indicated below:

random_10000.txt 10 2 3

a)Does the ranking change for the larger data set on random data and sorted data? 
b)Which data structure has the largest growth rate function? Explain your answers in terms
of building tree, contains search and range search for random data and sorted data.

Answer:
a)No!
b)1 stands for largest growth rate and 0 stands for not the largest growth rate
For ramdom:
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
ArrayListSet:		     0		      1		            1	
----------------------------------------------------------------------------
BSTreeSet:		     0		      0		            0	
----------------------------------------------------------------------------
BSTreeBSet:		     1		      0		            0	
----------------------------------------------------------------------------
RBTreeSet:		     0		      0		            0	
============================================================================
For sorted:
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
ArrayListSet:		     0		      0		            1	
----------------------------------------------------------------------------
BSTreeSet:		     1		      1		            1	
----------------------------------------------------------------------------
BSTreeBSet:		     1		      0		            0	
----------------------------------------------------------------------------
RBTreeSet:		     0		      0		            0	
============================================================================

6) In this question you will run the program using the parameters 
indicated below:

random_1000.txt 10 2 3
random_1000.txt 10 5 3
random_1000.txt 10 10 3

Briefly explain how the rebalanceThreshold effects the time for building tree, contains search and range search.

Answer:
For ramdom:
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
BSTreeBSet:		   Decreasing  	Increasing      	Increasing	
============================================================================

For sorted:
Tester D.S.:		   Build Tree	Contains Search		Range Search
============================================================================
BSTreeBSet:		   Decreasing   Increasing		Increasing	
============================================================================
Overall, while the rebalanceThreshold increases, the time for building tree is decreasing, but searching is increasing.
But the time for Building tree decreasing significantly than the increasing time for Searching, depending on the result.